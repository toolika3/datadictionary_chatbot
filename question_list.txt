1. List top 20 column names associated with UPB. Please include table that the columns originally belongs to. Dont use DSET ID in lieu of table . Include duplicates and look across all tables in the knowledgebase


import pandas as pd
import matplotlib.pyplot as plt

# --- User Inputs ---
input_file = "input.csv"
column_asset = "Asset ID"
percent_threshold = 5  # Show only assets with >= 5% of total

# --- Read CSV ---
df = pd.read_csv(input_file)

# --- Keep only rows where Asset ID is not blank ---
df = df[df[column_asset].notna() & (df[column_asset].astype(str).str.strip() != "")]

# --- Count occurrences per Asset ID ---
asset_counts = df[column_asset].value_counts()

# --- Calculate percentage ---
asset_percent = (asset_counts / asset_counts.sum()) * 100

# --- Combine into one DataFrame ---
summary_df = pd.DataFrame({
    "Count": asset_counts,
    "Percent": asset_percent
})

# --- Filter by threshold ---
summary_df = summary_df[summary_df["Percent"] >= percent_threshold]

# --- Sort for better visualization ---
summary_df = summary_df.sort_values("Percent", ascending=False)

# --- Plot combined chart ---
fig, ax1 = plt.subplots(figsize=(10, 6))

# Bar chart for counts
ax1.bar(summary_df.index.astype(str), summary_df["Count"], alpha=0.7)
ax1.set_xlabel("Asset ID")
ax1.set_ylabel("Count")
ax1.tick_params(axis='x', rotation=45)

# Secondary y-axis for percent
ax2 = ax1.twinx()
ax2.plot(summary_df.index.astype(str), summary_df["Percent"], color='red', marker='o')
ax2.set_ylabel("Percent (%)")

plt.title(f"Assets with >= {percent_threshold}% of Total")
plt.tight_layout()
plt.show()
